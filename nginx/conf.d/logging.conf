# Advanced logging configuration for monitoring and debugging
# Structured logging for better analysis

# Extended log format with timing information
log_format extended '$remote_addr - $remote_user [$time_local] '
                   '"$request" $status $bytes_sent '
                   '"$http_referer" "$http_user_agent" '
                   '"$http_x_forwarded_for" $request_id '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time" '
                   'cs=$upstream_cache_status';

# JSON format for structured logging
log_format json_combined escape=json
    '{'
        '"timestamp":"$time_iso8601",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status":$status,'
        '"body_bytes_sent":$body_bytes_sent,'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"http_x_forwarded_for":"$http_x_forwarded_for",'
        '"request_id":"$request_id",'
        '"request_time":$request_time,'
        '"upstream_connect_time":"$upstream_connect_time",'
        '"upstream_header_time":"$upstream_header_time",'
        '"upstream_response_time":"$upstream_response_time",'
        '"upstream_cache_status":"$upstream_cache_status",'
        '"ssl_protocol":"$ssl_protocol",'
        '"ssl_cipher":"$ssl_cipher"'
    '}';

# Security-focused log format
log_format security_json escape=json
    '{'
        '"timestamp":"$time_iso8601",'
        '"remote_addr":"$remote_addr",'
        '"request":"$request",'
        '"status":$status,'
        '"http_user_agent":"$http_user_agent",'
        '"http_x_forwarded_for":"$http_x_forwarded_for",'
        '"request_id":"$request_id",'
        '"request_length":$request_length,'
        '"request_time":$request_time,'
        '"connection":"$connection",'
        '"connection_requests":"$connection_requests"'
    '}';

# Rate limit log format
log_format rate_limit '$remote_addr - [$time_local] '
                     '"$request" $status '
                     '"limit_req_status=$limit_req_status"';

# Error log configuration
error_log /var/log/nginx/error.log warn;

# Conditional logging based on status codes
map $status $normal_request {
    ~^[23] 0;
    default 1;
}

map $status $error_request {
    ~^[45] 1;
    default 0;
}

# Log rotation is handled by logrotate
# /etc/logrotate.d/nginx configuration should be:
#
# /var/log/nginx/*.log {
#     daily
#     missingok
#     rotate 52
#     compress
#     delaycompress
#     notifempty
#     create 644 nginx nginx
#     postrotate
#         /bin/kill -USR1 `cat /run/nginx.pid 2>/dev/null` 2>/dev/null || true
#     endscript
# }
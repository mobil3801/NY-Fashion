version: '3.8'

services:
  # React Production Application
  react-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: react-app-prod
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    networks:
      - react-prod-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /var/cache/nginx:rw,noexec,nosuid,size=50m
      - /var/run:rw,noexec,nosuid,size=50m
      - /tmp:rw,noexec,nosuid,size=50m
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    labels:
      - "com.example.description=React TypeScript Production Application"
      - "com.example.version=1.0.0"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Reverse Proxy (uncomment if needed)
  # nginx-proxy:
  #   image: nginx:alpine
  #   container_name: nginx-proxy
  #   ports:
  #     - "443:443"
  #   volumes:
  #     - ./docker/proxy.conf:/etc/nginx/conf.d/default.conf:ro
  #     - ./certs:/etc/nginx/certs:ro
  #   depends_on:
  #     - react-app
  #   networks:
  #     - react-prod-network
  #   restart: unless-stopped

networks:
  react-prod-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
